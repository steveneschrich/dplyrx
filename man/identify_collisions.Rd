% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collisions.R
\name{identify_collisions}
\alias{identify_collisions}
\title{Identify duplicated column names from a join}
\usage{
identify_collisions(x, suffix = c(".x", ".y"))
}
\arguments{
\item{x}{A data frame}

\item{suffix}{A list of suffixes to consider (default is c(".x",".y"))}
}
\value{
A named list of column names. The names represent the unique base in
common. The values of the list represent the individual (collisions) column names.
}
\description{
Identifies column names that exist as ending in elements
of \code{suffix} (default is \code{.x} and \code{.y}). If the variable is duplicated
and has a suffix, this suggests that they had the same column name
during a dplyr join.
}
\details{
The purpose of this function is to identify column names that
have been joined from two tables, but have the same name. By default,
\code{\link[dplyr:mutate-joins]{dplyr::left_join()}} and the like will add a \code{.x} and \code{.y} to the
name. Often, I've had the problem that I cannot join by them (because
they are incomplete). So I'd rather clean them up after the join (using
meld). This function identifies the column names that need to be cleaned
up.
}
\examples{
\dontrun{
identify_collisions(data.frame(A.x=c(1,2,3), A.y=c(2,3,4)), suffix=c(".x",".y"))
# $A
# [1] "A.x" "A.y"
}
}
